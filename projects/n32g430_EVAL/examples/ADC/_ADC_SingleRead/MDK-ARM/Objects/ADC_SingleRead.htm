<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ADC_SingleRead.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ADC_SingleRead.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Mon Aug 29 10:00:45 2022
<BR><P>
<H3>Maximum Stack Usage =        140 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; log_init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3c]">CAN_RX0_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3d]">CAN_RX1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3e]">CAN_SCE_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3b]">CAN_TX_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1f]">COMP_1_2_3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[15]">DMA_Channel1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[16]">DMA_Channel2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[17]">DMA_Channel3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[18]">DMA_Channel4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[19]">DMA_Channel5_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1a]">DMA_Channel6_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1b]">DMA_Channel7_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1c]">DMA_Channel8_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[31]">EXTI15_10_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[20]">EXTI9_5_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[29]">I2C1_ER_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[28]">I2C1_EV_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2b]">I2C2_ER_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2a]">I2C2_EV_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[33]">LPTIM_WKUP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1e]">MMU_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[32]">RTCAlarm_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[c]">RTC_TAMPER_STAMP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2c]">SPI1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2d]">SPI2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[40]">System_Initializes</a> from system_n32g430.o(.text) referenced from startup_n32g430.o(.text)
 <LI><a href="#[21]">TIM1_BRK_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[24]">TIM1_CC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[23]">TIM1_TRG_COM_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[22]">TIM1_UP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[25]">TIM2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[26]">TIM3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[27]">TIM4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[39]">TIM5_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3a]">TIM6_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[34]">TIM8_BRK_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[37]">TIM8_CC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[36]">TIM8_TRG_COM_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[35]">TIM8_UP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[30]">UART3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[38]">UART4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2e]">USART1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2f]">USART2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[41]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32g430.o(.text)
 <LI><a href="#[42]">fputc</a> from log.o(.text) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[3f]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[41]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[43]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b6]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bc]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[bd]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[be]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[bf]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[c0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[c1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>COMP_1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>LPTIM_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>MMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>System_Initializes</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, system_n32g430.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = System_Initializes &rArr; System_Clock_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Clock_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>System_Clock_Frequency_Update</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, system_n32g430.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>ADC_Vrefint_Get</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>ADC_Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Reset
</UL>

<P><STRONG><a name="[49]"></a>ADC_Multichannels_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4a]"></a>ADC_Multichannels_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4b]"></a>ADC_Continue_Conversion_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4c]"></a>ADC_Continue_Conversion_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4d]"></a>ADC_Regular_Group_External_Trigger_Source_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4e]"></a>ADC_Data_Alignment_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4f]"></a>ADC_Regular_Channels_Number_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[48]"></a>ADC_Initializes</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADC_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Channels_Number_Config
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Data_Alignment_Config
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Group_External_Trigger_Source_Config
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Continue_Conversion_Disable
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Continue_Conversion_Enable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Multichannels_Disable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Multichannels_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[a4]"></a>ADC_Initializes_Structure</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[a8]"></a>ADC_ON</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[c4]"></a>ADC_OFF</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>ADC_DMA_Transfer_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[c5]"></a>ADC_DMA_Transfer_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>ADC_Interrupts_Enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[56]"></a>ADC_Interrupts_Disable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[aa]"></a>ADC_Calibration_Operation</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[ab]"></a>ADC_Regular_Channels_Software_Conversion_Operation</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[c6]"></a>ADC_Discontinuous_Mode_Channel_Count_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>ADC_Discontinuous_Mode_Config</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>ADC_Channel_Sample_Time_Config</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Channel_Sample_Time_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[a6]"></a>ADC_Regular_Sequence_Conversion_Number_Config</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Regular_Sequence_Conversion_Number_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[c8]"></a>ADC_External_Trigger_Conversion_Config</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>ADC_Regular_Group_Conversion_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>ADC_Injected_Group_Autoconversion_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>ADC_Injected_Group_Autoconversion_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>ADC_Injected_Group_External_Trigger_Source_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>ADC_Injected_Channels_Software_Conversion_Operation</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>ADC_Injected_Sequence_Conversion_Number_Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>ADC_Injected_Channels_Number_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>ADC_Injected_Channels_Offset_Config</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>ADC_Injected_Group_Conversion_Data_Get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>ADC_Analog_Watchdog_Mode_Channel_Config</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>ADC_Analog_Watchdog_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>ADC_Analog_Watchdog_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>ADC_Analog_Watchdog_HighThresholds_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>ADC_Analog_Watchdog_LowThresholds_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>ADC_Temperature_Sensor_And_Vrefint_Channel_Enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>ADC_Temperature_Sensor_And_Vrefint_Channel_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>ADC_INTFlag_Status_Get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>ADC_Flag_Status_Get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[da]"></a>ADC_INTFlag_Status_Clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>ADC_Flag_Status_Clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>ADC_Vbat_Monitor_Enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[52]"></a>ADC_Vbat_Monitor_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[53]"></a>ADC_Deep_Power_Mode_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[54]"></a>ADC_Deep_Power_Mode_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[58]"></a>ADC_AHB_Clock_Mode_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[57]"></a>ADC_PLL_Clock_Mode_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[59]"></a>ADC_Calibration_Auto_Load_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5a]"></a>ADC_Calibration_Auto_Load_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5b]"></a>ADC_Differential_Mode_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5c]"></a>ADC_Differential_Mode_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5d]"></a>ADC_Data_Resolution_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5e]"></a>ADC_Sample_Time_Level_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[50]"></a>ADC_Initializes_Ex</STRONG> (Thumb, 134 bytes, Stack size 4 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Sample_Time_Level_Config
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Data_Resolution_Config
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Differential_Mode_Disable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Differential_Mode_Enable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Auto_Load_Disable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Auto_Load_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PLL_Clock_Mode_Config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AHB_Clock_Mode_Config
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Deep_Power_Mode_Disable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Deep_Power_Mode_Enable
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Vbat_Monitor_Disable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Vbat_Monitor_Enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Interrupts_Disable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Interrupts_Enable
</UL>

<P><STRONG><a name="[dc]"></a>ADC_Initializes_StructureEx</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>ADC_Bypass_Calibration_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>ADC_Bypass_Calibration_Disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>ADC_Differential_Channels_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>ADC_Clock_Mode_Config</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Clock_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_PLL_Clock_Prescaler_Enable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_PLL_Clock_Disable
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_Hclk_Enable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_Hclk_Config
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PLL_Clock_Mode_Config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AHB_Clock_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
</UL>

<P><STRONG><a name="[e0]"></a>RCC_Reset</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>RCC_HSE_Config</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>RCC_Flag_Status_Get</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Stable_Wait
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Stable_Wait
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
</UL>

<P><STRONG><a name="[65]"></a>RCC_Clocks_Frequencies_Value_Get</STRONG> (Thumb, 250 bytes, Stack size 20 bytes, n32g430_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Baud_Rate_Config
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Stable_Wait
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Stable_Wait
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
</UL>

<P><STRONG><a name="[64]"></a>RCC_HSE_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[e2]"></a>RCC_Clock_Security_System_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>RCC_Clock_Security_System_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>RCC_HSI_Calibration_Value_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>RCC_HSI_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>RCC_HSI_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>RCC_HSI_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[e7]"></a>RCC_PLL_Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>RCC_PLL_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>RCC_PLL_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>RCC_Sysclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>RCC_Sysclk_Source_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>RCC_Hclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>RCC_Pclk1_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>RCC_Pclk2_Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>RCC_Interrupt_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>RCC_Interrupt_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>RCC_TIM1_8_Clock_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>RCC_ADC_1M_Clock_Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
</UL>

<P><STRONG><a name="[63]"></a>RCC_ADC_PLL_Clock_Prescaler_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[61]"></a>RCC_ADC_PLL_Clock_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[62]"></a>RCC_ADC_Hclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[60]"></a>RCC_ADC_Hclk_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[f2]"></a>RCC_ADC_Hclk_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>RCC_LSE_Trim_Config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Config
</UL>

<P><STRONG><a name="[69]"></a>RCC_APB1_Peripheral_Clock_Enable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LPTIM_Clock_Config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Config
</UL>

<P><STRONG><a name="[68]"></a>RCC_LSE_Config</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Trim_Config
</UL>

<P><STRONG><a name="[f3]"></a>RCC_LSE_Clock_Security_System_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>RCC_LSE_Clock_Security_System_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>RCC_LSE_Clock_Security_System_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>RCC_LSE_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[f6]"></a>RCC_LSI_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>RCC_LSI_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>RCC_LSI_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[f8]"></a>RCC_RTC_Clock_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>RCC_RTC_Clock_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>RCC_RTC_Clock_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>RCC_LPTIM_Clock_Config</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
</UL>

<P><STRONG><a name="[fb]"></a>RCC_LPTIM_Reset</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>RCC_LPTIM_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>RCC_LPTIM_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>RCC_AHB_Peripheral_Clock_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
</UL>

<P><STRONG><a name="[fe]"></a>RCC_AHB_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>RCC_APB2_Peripheral_Clock_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
</UL>

<P><STRONG><a name="[ff]"></a>RCC_APB2_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>RCC_APB1_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>RCC_AHB_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Reset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
</UL>

<P><STRONG><a name="[7b]"></a>RCC_APB2_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Function_Reset
</UL>

<P><STRONG><a name="[89]"></a>RCC_APB1_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
</UL>

<P><STRONG><a name="[101]"></a>RCC_Backup_Reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>RCC_MCO_PLL_Prescaler_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>RCC_MCO_Source_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>RCC_Reset_Flag_Clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>RCC_Interrupt_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>RCC_Interrupt_Status_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>GPIO_Reset</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Reset
</UL>

<P><STRONG><a name="[70]"></a>GPIOA_Pin_Reset</STRONG> (Thumb, 256 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[71]"></a>GPIOB_Pin_Reset</STRONG> (Thumb, 230 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[72]"></a>GPIOC_Pin_Reset</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[73]"></a>GPIOD_Pin_Reset</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[107]"></a>AFIO_EXTI_Reset</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>GPIO_ALLPin_Reset</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOD_Pin_Reset
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Pin_Reset
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Pin_Reset
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Pin_Reset
</UL>

<P><STRONG><a name="[75]"></a>GPIO_Alternate_Set</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[76]"></a>GPIO_Mode_Set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[77]"></a>GPIO_Pull_Set</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Pull_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[78]"></a>GPIO_SlewRate_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SlewRate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[79]"></a>GPIO_Driver_Set</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Driver_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[74]"></a>GPIO_Peripheral_Initialize</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Driver_Set
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SlewRate_Set
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pull_Set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Mode_Set
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_Configuration
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
</UL>

<P><STRONG><a name="[7a]"></a>GPIO_Alternate_Function_Reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
</UL>

<P><STRONG><a name="[9c]"></a>GPIO_Structure_Initialize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_Configuration
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
</UL>

<P><STRONG><a name="[108]"></a>GPIO_Input_Pin_Data_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>GPIO_Input_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>GPIO_Output_Pin_Data_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>GPIO_Output_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>GPIO_Pins_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>GPIO_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>GPIO_PBSC_Pins_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>GPIO_PBC_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>GPIO_Pin_Toggle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>GPIO_Pin_Lock_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>GPIO_Pin_Remap_Set</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>GPIO_EXTI_Line_Set</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>AFIO_SPI_NSS_Mode_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>AFIO_ADC_External_Trigger_Remap_Set</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>AFIO_5V_Tolerance_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>AFIO_5V_Tolerance_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>AFIO_Filter_Stage_Ctrl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>AFIO_EFT_Enable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>AFIO_EFT_Disable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>AFIO_Digital_EFT_Enable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>AFIO_Digital_EFT_Disable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>DMA_Reset</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[87]"></a>DMA_Memory_2_Memory_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[86]"></a>DMA_Priority_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[85]"></a>DMA_Circular_Mode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[84]"></a>DMA_Memory_Data_Width_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[83]"></a>DMA_Peripheral_Data_Width_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[82]"></a>DMA_Memory_Addr_Increment_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[81]"></a>DMA_Peripheral_Addr_Increment_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[80]"></a>DMA_Buffer_Size_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[7f]"></a>DMA_Destination_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[7e]"></a>DMA_Memory_Address_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[7d]"></a>DMA_Peripheral_Address_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[7c]"></a>DMA_Initializes</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, n32g430_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Address_Config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Address_Config
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Destination_Config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Buffer_Size_Config
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Addr_Increment_Config
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Addr_Increment_Config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Data_Width_Config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Data_Width_Config
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Circular_Mode_Config
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Priority_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_2_Memory_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[a0]"></a>DMA_Structure_Initializes</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[a3]"></a>DMA_Channel_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[11e]"></a>DMA_Channel_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>DMA_Interrupts_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>DMA_Interrupts_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>DMA_Current_Data_Transfer_Number_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>DMA_Current_Data_Transfer_Number_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>DMA_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>DMA_Flag_Status_Clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>DMA_Interrupt_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>DMA_Interrupt_Status_Clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>DMA_Channel_Request_Remap</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[88]"></a>USART_Reset</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Reset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
</UL>

<P><STRONG><a name="[90]"></a>USART_Hardware_Flow_Control_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[8f]"></a>USART_Mode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[8e]"></a>USART_Parity_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[8d]"></a>USART_Stop_Bits_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[8c]"></a>USART_Word_Length_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[8a]"></a>USART_Baud_Rate_Config</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[8b]"></a>USART_Initializes</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Baud_Rate_Config
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Word_Length_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Stop_Bits_Config
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Parity_Config
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Mode_Config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Hardware_Flow_Control_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
</UL>

<P><STRONG><a name="[127]"></a>USART_Structure_Initializes</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>USART_Last_Bit_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[94]"></a>USART_Phase_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[93]"></a>USART_Polarity_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[92]"></a>USART_Clock_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[91]"></a>USART_Clock_Initializes</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Config
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Polarity_Config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Phase_Config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Last_Bit_Config
</UL>

<P><STRONG><a name="[128]"></a>USART_Clock_Structure_Initializes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>USART_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
</UL>

<P><STRONG><a name="[129]"></a>USART_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>USART_Interrput_Enable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>USART_Interrput_Disable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>USART_DMA_Transfer_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>USART_DMA_Transfer_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>USART_Address_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>USART_WakeUp_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>USART_Receiver_Wakeup_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>USART_Receiver_Wakeup_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>USART_LIN_Break_Detect_Length_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>USART_LIN_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>USART_LIN_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>USART_Data_Send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDat
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[135]"></a>USART_Data_Receive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>USART_Break_Frame_Send</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>USART_Guard_Time_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>USART_Prescaler_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>USART_Smart_Card_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>USART_Smart_Card_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>USART_Smart_Card_NACK_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>USART_Smart_Card_NACK_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>USART_Half_Duplex_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>USART_Half_Duplex_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>USART_IrDA_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>USART_IrDA_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>USART_IrDA_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>USART_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDat
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[142]"></a>USART_Flag_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>USART_Interrupt_Status_Get</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>USART_Interrupt_Status_Clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>main</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; log_init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfDat16
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>ADC_GPIO_Configuration</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ADC_GPIO_Configuration &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[9d]"></a>ADC_RCC_Configuration</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_RCC_Configuration &rArr; ADC_Clock_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_1M_Clock_Config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[97]"></a>ADC_Init</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ADC_Init &rArr; ADC_GPIO_Configuration &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_Configuration
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Request_Remap
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Structure_Initializes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Flag_Status_Get
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Sequence_Conversion_Number_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Sample_Time_Config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Channels_Software_Conversion_Operation
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Operation
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Transfer_Enable
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ON
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Structure
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>DelayMs</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[145]"></a>DelayUs</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>log_init</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = log_init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>fputc</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[b0]"></a>PrintDat</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Send
</UL>

<P><STRONG><a name="[b1]"></a>PrintfDat</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[9a]"></a>PrintfDat16</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PrintfDat16 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>PrintfDat32</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[44]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[146]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[147]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[148]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[149]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[99]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfDat32
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfDat
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfDat16
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[14b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[14c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[45]"></a>System_Clock_Set</STRONG> (Thumb, 254 bytes, Stack size 20 bytes, system_n32g430.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = System_Clock_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Initializes
</UL>

<P><STRONG><a name="[b8]"></a>_printf_core</STRONG> (Thumb, 984 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[ba]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b9]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
